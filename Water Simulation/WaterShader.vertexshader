#version 400

layout(location = 0) in vec3 vertexPosition_modelspace;

out vec3 EyeDirection_cameraspace;
out vec3 LightDirection_cameraspace;
out vec2 uv;

uniform mat4 V;
uniform mat4 M;
uniform vec3 LightPosition_worldspace;
uniform float time;
uniform float texOffset;
uniform float texScale;

void main(){

    uv = (vertexPosition_modelspace.xz + texOffset + (time*0.08))/texScale;

    gl_Position =  vec4(vertexPosition_modelspace,1);

    vec3 vertexPosition_cameraspace = ( V * M * vec4(vertexPosition_modelspace,1)).xyz;
    EyeDirection_cameraspace = vec3(0,0,0) - vertexPosition_cameraspace;

    vec3 LightPosition_cameraspace = ( V * vec4(LightPosition_worldspace,1)).xyz;
    LightDirection_cameraspace = LightPosition_cameraspace + EyeDirection_cameraspace;

}